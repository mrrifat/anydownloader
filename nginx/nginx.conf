user  nginx;
worker_processes  auto;

events { worker_connections  1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;

  gzip on;
  gzip_types text/plain text/css application/javascript application/json image/svg+xml;

  # Upstream FastAPI app in docker-compose
  upstream fastapi_app {
    server web:8000;
    keepalive 64;
  }

  # --- HTTP (80): redirect to HTTPS and serve ACME challenges ---
  server {
    listen 80;
    listen [::]:80;
    server_name dw.fil-bd.com;

    # ACME http-01 challenge location for initial/renewal certs
    location ^~ /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    # Everything else -> HTTPS
    location / {
      return 301 https://$host$request_uri;
    }
  }

  # --- HTTPS (443): reverse proxy to FastAPI ---
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name dw.fil-bd.com;

    # Certbot-mounted live certs (volumes from docker-compose)
    ssl_certificate     /etc/letsencrypt/live/dw.fil-bd.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dw.fil-bd.com/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;

    # Serve ACME challenge here too (renewals)
    location ^~ /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    # Reverse proxy to FastAPI
    location / {
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_pass http://fastapi_app;
    }
  }
}
